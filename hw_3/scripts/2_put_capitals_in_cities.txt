// Create a node (:City) for each capital that hadn't such node

MATCH (n)
WITH max(toInteger(n.id)) AS maxId
MATCH (c:Country)
WHERE NOT EXISTS {
    MATCH (ci:City)
    WHERE c.capital = ci.name
} AND c.capital IS NOT NULL
WITH c.id AS countryId, c.capital AS capital, c.latitude AS latitude, c.longitude AS longitude, maxId+1 as maxId
CREATE (:City {id: maxId, name: capital, latitude: latitude, longitude: longitude, country_id:countryId});


// Create edge [:BELONGS_TO_COUNTRY] from the new cities to the corresponding country

MATCH (city:City), (country:Country)
WHERE city.country_id = country.id
CREATE (city)-[:BELONGS_TO_COUNTRY]->(country);


// Create edge [:HAS_CAPITAL] from the countries to the new cities

MATCH (city:City)-[:BELONGS_TO_COUNTRY]->(country:Country)
WHERE country.capital = city.name
CREATE (country)-[:HAS_CAPITAL]->(city)


//

MATCH (country:Country)
SET country.set_capital = FALSE